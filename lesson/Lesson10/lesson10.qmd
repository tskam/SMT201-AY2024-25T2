---
title: "Lesson 10: Urban Land Cover Classification and Change Detection with Remotely Sensed Data"
author: "Dr. Kam Tin Seong<br/>Assoc. Professor of Information Systems"
institute: "School of Computing and Information Systems,<br/>Singapore Management University"
date: "last-modified"
date-modified: "last-modified" 
format: 
  revealjs:
    width: 1600
    height: 900
    show-notes: false
    slide-number: true
    show-slide-number: 'all'
editor: visual
execute: 
  freeze: true
---

## Content

-   Urban Land Cover Classification

-   Unsupervised Classification Methods

-   Supervised Classification Process

-   Classification Accuracy Metrics

## Urban Land Cover Classification of Satellite Remote Sensing Imagery

::::: columns
::: {.column width="50%"}
The process of assigning a pixel (or groups of pixels) of remote sensing image to an urban land cover class.

-   **Unsupervised Classification** in which the computer assigns pixels to categories with no instructions from the image analyst.

-   **Supervised Classification** in which the image analyst provides training-site information that the computer uses to assign pixels to categories.
:::

::: {.column width="50%"}
![](img/image1.jpg)
:::
:::::

## Unsupervised Classification

::::: columns
::: {.column width="50%"}
-   The goal of unsupervised classification is to automatically segregate pixels of a remote sensing image into groups of similar spectral character.

-   Classification is done using one of several statistical routines generally called "clustering" where classes of pixels are created based on their shared spectral signatures.

-   Clusters are split and /or merged until further clustering doesn't improve the explanation of the variation in the scene.
:::

::: {.column width="50%"}
![](img/image2.jpg)
:::
:::::

------------------------------------------------------------------------

### Unsupervised classification algirithm

-   Hierarchical clustering
-   k-means clustering
-   ISODATA (iterative Self-Organizing Data Analysis Technique)
-   fuzzy-clustering

------------------------------------------------------------------------

### k-means clustering

-   Partitioning clustering approach.

-   Each cluster is associated with a centroid (center point).

-   Each point is assigned to the cluster with the closest centroid.

-   Number of clusters, K, must be specified.

-   The basic algorithm is very simple

![](img/image3.jpg){width="438"}

------------------------------------------------------------------------

### How the K-means algorithm works?

The clustering process starts by randomly assigning objects to a number of clusters. The objects are then successively reassigned to other clusters to minimize the within-cluster variation, which is basically the (squared) distance from each observation to the center of the associated cluster. If the reallocation of an object to another cluster decreases the within-cluster variation, this object is reassigned to that cluster.

![](img/image4.jpg){fig-align="center"}

------------------------------------------------------------------------

### ISODATA clustering algorithm

-   The ISODATA algorithm has some further refinements by splitting and merging of clusters (JENSEN, 1996).

    -   Clusters are merged if either the number of members (pixel) in a cluster is less than a certain threshold or if the centers of two clusters are closer than a certain threshold.

    -   Clusters are split into two different clusters if the cluster standard deviation exceeds a predefined value and the number of members (pixels) is twice the threshold for the minimum number of members.

-   The ISODATA algorithm is similar to the k-means algorithm with the distinct difference that the ISODATA algorithm allows for different number of clusters while the k-means assumes that the number of clusters is known a priori.

------------------------------------------------------------------------

### ISODATA Iteration

-   In ISODATA iterations, pixels assigned to clusters with closest spectral mean; mean recalculated; pixels reassigned.

![](img/image6.jpg){fig-align="center"}

-   Continues until maximum iterations or convergence threshold reached.

------------------------------------------------------------------------

### Clustering Parameters

::::: columns
::: {.column width="50%"}
-   To perform ISODATA clustering; NTM
    -   N -- maximum number of clusters to be considered. Since each cluster is the basis for a class, this number becomes the maximum number of classes to be formed. The ISODATA process begins by determining N arbitrary cluster means. Some clusters with too few pixels can be eliminated, leaving less than N clusters.
    -   T -- a convergence threshold, which is the maximum percentage of pixels whose class values are allowed to be unchanged between iterations.
    -   M -- maximum number of iterations to be performed
:::

::: {.column width="50%"}
-   Number of clusters: 10 to 15 per desired land cover class.

-   Convergence threshold: percentage of pixels whose class values should not change between iterations; generally set to 95%.

-   Maximum number of iterations: ideally, the convergence threshold should be reached. Should set "reasonable" parameters so that convergence is reached before iterations run out.
:::
:::::

------------------------------------------------------------------------

### Limitation of k-means and ISODATA clustering

k-means and ISODATA clustering work best for images with clusters that are spherical and that have the same variance. This is often not true for remote sensing images. For example, a cluster with "desert" pixels is compact/circular. A "forest" cluster, however, is usually more or less elongated/oval with a much larger variability compared to the "desert" cluster. While the "desert" cluster is usually very well detected by the k-means algorithm as one distinct cluster, the "forest" cluster is often split up into several smaller cluster. The way the "forest" cluster is split up can vary quite a bit for different starting values and is thus arbitrary.

![](img/image7.jpg){fig-align="center"}

## Supervised Classification

::::: columns
::: {.column width="50%"}
Supervised training is closely controlled by the analyst. In this process, you select pixels that represent patterns or land cover features that you recognize, or that you can identify with help from other sources, such as aerial photos, ground truth data, or maps. Knowledge of the data, and of the classes desired, is required before classification.

By identifying patterns, you can instruct the computer system to identify pixels with similar characteristics. If the classification is accurate, the resulting classes represent the categories within the data that you originally identified.
:::

::: {.column width="50%"}
![](img/image8.jpg)
:::
:::::

------------------------------------------------------------------------

### Statistical Learning: Maximum Likelihood Algorithm

::::: columns
::: {.column width="50%"}
Maximum likelihood classification assumes that the statistics for each class in each band are normally distributed and calculates the probability that a given pixel belongs to a specific class. Unless you select a probability threshold, all pixels are classified. Each pixel is assigned to the class that has the highest probability (that is, the maximum likelihood). If the highest probability is smaller than a threshold you specify, the pixel remains unclassified.
:::

::: {.column width="50%"}
The discriminant function, described by Richards and Jia (2006), is calculated for every pixel as:

![](img/image17.jpg)

![](img/image17b.jpg)
:::
:::::

------------------------------------------------------------------------

### Statistical Learning: Minimum Distance Algorithm

::::: columns
::: {.column width="50%"}
The minimum distance technique uses the mean vectors of each endmember and calculates the Euclidean distance from each unknown pixel to the mean vector for each class. All pixels are classified to the nearest class unless a standard deviation or distance threshold is specified, in which case some pixels may be unclassified if they do not meet the selected criteria.
:::

::: {.column width="50%"}
The distance is calculated for every pixel in the image, assigning the class of the spectral signature that is closer, according to the following discriminant function (adapted from Richards and Jia, 2006):

![](img/image18a.jpg) ![](img/image18b.jpg)
:::
:::::

------------------------------------------------------------------------

### Statistical Learning: Spectral Angle Mapping

::::: columns
::: {.column width="50%"}
The Spectral Angle Mapping calculates the spectral angle between spectral signatures of image pixels and training spectral signatures. The spectral angle Î¸ is defined as (Kruse et al., 1993):

![](img/image19a.jpg) ![](img/image19b.jpg)
:::

::: {.column width="50%"}
Therefore a pixel belongs to the class having the lowest angle, that is:

![](img/image20a.jpg){width="550"} ![](img/image20b.jpg){width="480"} ![](img/image20c.jpg){width="500"}
:::
:::::

------------------------------------------------------------------------

## Machine Learning: Random Forest

:::::: columns
:::: {.column width="50%"}
::: {style="font-size: 0.8em"}
-   The Random Forest (RF) algorithm (Breimann 2001) is a supervised classification algorithm. It builds upon the concept of decision trees (DT).
-   The RF relies on many self-learning decision trees (i.e. "Forest"). The idea behind using many decision trees (i.e. an ensemble) is that many base learners can come to one strong and robust decision compared to a single DT.
-   Different from the manual (expert-based) definition of decision rules, the RF uses self-learning decision trees. These trees automatically define rules at each node based on a training dataset.
-   RF seeks to minimize the heterogeneity of the two resulting subsets of the data created by the respective rule. Heterogeneity is in this case expressed as the Gini impurity index and the rule creating the least heterogeneous subsets of the data is used for the respective node.
:::
::::

::: {.column width="50%"}
![](img/image21.jpg){width="640"}
:::
::::::

------------------------------------------------------------------------

### Accuracy assessment for classifications

The basic principle for all accuracy assessment is to compare estimates with reality, and to quantify the difference between the two.

-   In the context of remote sensing-based land cover classifications, the 'estimates' are the classes mapped for each pixel, and 'reality' is the actual land cover in the areas corresponding to each pixel.

------------------------------------------------------------------------

### The confusion matrix

A confusion matrix (or error matrix) is usually used as the quantitative method of characterising image classification accuracy. It is a table that shows correspondence between the classification result and a reference image. I.e., to create the confusion matrix we need the ground truth data, such as cartographic information, results of manually digitizing an image, field work/ground survey results recorded with a GPS-receiver.

![](img/image9.jpg){fig-align="center"}

------------------------------------------------------------------------

### User, producer, and overall accuracy

::: {style="font-size: 0.8em"}
-   The user's accuracy column shows false positives, or errors of commission, where pixels are incorrectly classified as a known class when they should have been classified as something different. User's accuracy is also referred to as Type 1 error. The data to compute this error rate is read from the rows of the table. The user's accuracy is calculated by dividing the total number of classified points that agree with the reference data by the total number of classified points for that class. The Total row shows the number of points that should have been identified as a given class, according to the reference data.
:::

![](img/image10.jpg){fig-align="center"}

------------------------------------------------------------------------

### User, producer, and overall accuracy

::: {style="font-size: 0.8em"}
-   The producer's accuracy column shows false negatives, or errors of omission. The producer's accuracy indicates how accurately the classification results meet the expectation of the creator. Producer's accuracy is also referred to as Type 2 error. The data to compute this error rate is read in the columns of the table. The producer's accuracy is calculated by dividing the total number of classified points that agree with reference data by the total number of reference points for that class. These values are false-negative values within the classified results. The Total column shows the number of points that were identified as a given class, according to the classified map.
:::

![](img/image11.jpg){fig-align="center"}

------------------------------------------------------------------------

### User, producer, and overall accuracy

::: {style="font-size: 0.8em"}
-   The **overall accuracy** answers the following question: 'What proportion of the map is correctly classified?', which can often be interpreted simply as 'how accurate is the map?'. Looking at the values in the diagonal of the confusion matrix in the confusion matrix below, these sum up to 49+40+59=148, out of a total 166 pixels in the validation data set. 148 out of 166 is 89.16%, so based on the validation data we estimate that 89.16% of the map is correctly classified.
:::

![](img/image12.jpg){fig-align="center"}

------------------------------------------------------------------------

### Kappa

::::: columns
::: {.column width="50%"}
KAPPA analysis is a discrete multivariate technique used in accuracy assessments.

-   It yields a Khat statistic (an estimate of KAPPA) that is a measure of agreement or accuracy.

-   The Khat statistic is computed by using the formula below:

![](img/image14.jpg)
:::

::: {.column width="50%"}
Rating criteria of Kappa statistics

![](img/image15.jpg){width="589"}

![](img/image15.jpg){width="2" height="1"}
:::
:::::

------------------------------------------------------------------------

### F1 Score

::::: columns
::: {.column width="50%"}
-   The goal of a good image analysis is, of course, to have a large number of True Presences, and a small number of False Presences and a small number of False Negatives.

-   To quantify how well the image analysis succeeded in this, the value typically calculated is called the F1 score, which is calculated as:

![](img/image16a.jpg){fig-align="center" width="423"}
:::

::: {.column width="50%"}
![](img/image16.jpg)

-   The F1 score has the nice property of having values that range from 0 (worst) to 1 (best), which makes it easy to interpret.
:::
:::::

## Reference

-   [Land Cover & Land Use](https://natural-resources.canada.ca/maps-tools-publications/satellite-elevation-air-photos/land-cover-land-use)

-   Richards and Jia (2006) **Remote Sensing Digital Image Analysis: An Introduction**, Springer.

```{r}
#| echo: false
#| eval: false
renderthis::to_pdf(
  from = "https://smt201-ay2023-24t1.netlify.app/lesson/lesson10/lesson10.html",
  to = "D://SMT201_AY2023-24T1/02-Lesson/pdf/Lesson10.pdf"
)
```
