{
  "hash": "d3a1124757ce4a11f8ea1e1100c05650",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lesson 12: Sharing Geographical Information with WebGIS\"\nauthor: \"Dr. Kam Tin Seong<br/>Assoc. Professor of Information Systems\"\ninstitute: \"School of Computing and Information Systems,<br/>Singapore Management University\"\ndate: \"last-modified\"\ndate-modified: \"last-modified\" \nformat: \n  revealjs:\n    width: 1600\n    height: 900\n    show-notes: false\n    slide-number: true\n    show-slide-number: 'all'\neditor: visual\nexecute: \n  freeze: true\n---\n\n\n\n## Content\n\n-   Motivation of GeoWeb Mapping\n\n-   History of GeoWeb Mapping\n\n-   Fundamental of GeoWeb Mapping\n\n-   GeoWeb Mapping Protocols\n\n-   GeoWeb Mapping software\n\n-   GeoWeb Mapping 2.0\n\n## Motivation: Sharing geographic information\n\n::::: columns\n::: {.column width=\"50%\"}\n-   Three possible ways to share geographic data.\n\n-   Web GIS allows data to be shared over the Web\n:::\n\n::: {.column width=\"50%\"}\n![](img/image1.jpg)\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### Motivation: Isolated Island\n\n::::: columns\n::: {.column width=\"50%\"}\n![](img/image2.jpg){width=\"590\"}\n:::\n\n::: {.column width=\"50%\"}\n![](img/image2b.jpg)\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### GeoWeb Mapping in Action\n\n-   An interesting [GeoWeb](https://corona.jakarta.go.id/en/peta-vaksinasi-kelurahan) create by our neighbour country for sharing COVID-19 vaccination information.\n\n![](img/image3.jpg)\n\n## How A GeoWeb Mapping Service Works\n\n-   Client-server architecture\n\n![](img/image4.jpg)\n\n## GeoWeb Mapping Protocols\n\n-   Web Map Service (WMS)\n\n-   Web Feature Service (WFS)\n\n-   Extensible Markup Language (XML)\n\n-   Geography Markup Language (GML)\n\n-   Keyhole Markup Language (KML)\n\n------------------------------------------------------------------------\n\n### Web Map Service (WMS)\n\n::::: columns\n::: {.column width=\"50%\"}\n-   A standard protocol for serving georeferencing map images generated by a map server.\n\n![](img/image5a.jpg)\n\nSource: [WMS](http://en.wikipedia.org/wiki/Web_Map_Service) and [ArcGIS](http://server.arcgis.com/en/server/latest/publish-services/linux/communicating-with-a-wms-service-in-a-web-browser.htm#GUID-EF5721D1-C928-447A-8EA5-5AF60FFE2EFC)\n:::\n\n::: {.column width=\"50%\"}\n-   An example of WMS request.\n\n![](img/image5b.jpg){width=\"506\"}\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### An example of WFS request\n\n::::: columns\n::: {.column width=\"50%\"}\n![](img/image6a.jpg){width=\"763\"}\n:::\n\n::: {.column width=\"50%\"}\n![](img/image6b.jpg)\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### Keyhole Markup Language (KML)\n\n::::: columns\n::: {.column width=\"50%\"}\n-   KML is an XML notation for expressing geographic annotation and visualization within Internet-based, two-dimensional maps and three-dimensional Earth browsers.\n\nFor more information: [Keyhole Markup Language](http://en.wikipedia.org/wiki/Keyhole_Markup_Language).\n:::\n\n::: {.column width=\"50%\"}\n![](img/image7.jpg){width=\"705\"}\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### Geography Markup Language (GML)\n\n-   GML is the XML grammar defined by the Open Geospatial Consortium (OGC) to express geographical features.\n\n-   It serves as a modeling language for geographic systems as well as an open interchange format for geographic transactions on the Internet.\n\n![](img/image8.jpg)\n\nFor more information, refer to this [link](http://en.wikipedia.org/wiki/Geography_Markup_Language).\n\n## Geospatial Server Software\n\n::::: columns\n::: {.column width=\"50%\"}\nCommercial off-the-shelf (COS) ![](img/image9a.jpg){width=\"405\"}\n:::\n\n::: {.column width=\"50%\"}\nOpen Source\n\n![](img/image9b.jpg){width=\"350\"}\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### ArcGIS Server (ESRI)\n\n::::: columns\n::: {.column width=\"50%\"}\n-   A back-end server software component of ArcGIS Enterprise that makes your geographic information available to others in your organization and, optionally, anyone with an internet connection.\n\n-   This is accomplished through GIS services, which allow a server computer to receive and process requests for information sent by other devices.\n\n-   To learn more, click on this [link](https://enterprise.arcgis.com/en/server/latest/get-started/windows/what-is-arcgis-for-server-.htm)\n:::\n\n::: {.column width=\"50%\"}\n![](img/image10.jpg){fig-align=\"center\" width=\"450\"}\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### GeoServer\n\n::::: columns\n::: {.column width=\"50%\"}\n-   Java-based software server that allows users to view and edit geospatial data.\n\n-   Designed for interoperability, it publishes data from any major spatial data source using open standards.\n\n-   Use free and open source software\n\n-   Integrate with existing mapping APIs such as Google Map, Yahoo Map, and Microsoft Bing Map.\n\nTo learn more, click on this [link](http://geoserver.org/).\n:::\n\n::: {.column width=\"50%\"}\n![](img/image11.jpg){width=\"600\"}\n\n-   To visit the site, click on this [link](http://maps.nyc.gov/doitt/nycitymap/).\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### Deficiencies of conventional web mapping\n\n-   Extremely high investment cost of backend server technologies, especially the COS system.\n\n-   Data rich, content poor\n\n-   Poor usability\n\n-   Low client side capability\n\n-   Platform incompatibilities\n\n------------------------------------------------------------------------\n\n## GeoWeb Mapping evolution\n\n-   Impact of Rich Internet Application (RIA)\n\n![](img/image12.jpg)\n\n------------------------------------------------------------------------\n\n### OpenLayer\n\n-   An open source (provided under a modified BSD license) JavaScript library for displaying map data in web browsers.\n\n-   To find out more including download, click on this [link](http://openlayers.org/) and a collection of [Awesome OpenLayer](https://github.com/webgeodatavore/awesome-openlayers).\n\n![](img/image13.jpg)\n\nThe site [link](https://maps.cdrc.ac.uk/#/geodemographics/imde2019/default/BTTTFFT/10/-0.1500/51.5200/).\n\n------------------------------------------------------------------------\n\n### Leaflet: JavaScript GeoWeb Mapping APIs\n\n::::: columns\n::: {.column width=\"50%\"}\n-   An open-source (BSD license) JavaScript library for mobile-friendly interactive maps.\n\n-   It helps you bring geospatial data to life using HTML5, SVG and CSS, no plugin is required.\n\n-   It can be used with almost any online map including proprietary tile servers.\n\n-   Weighing just about 31 KB of JS, it has all the features most developers ever need for online maps including mobile.\n\n-   To learn more and download, click on this [link](https://leafletjs.com/).\n:::\n\n::: {.column width=\"50%\"}\n-   Who use Leaflet?\n\n![](img/image14.jpg)\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### qgis2web plug-in\n\n::::: columns\n::: {.column width=\"50%\"}\n-   qgis2web generates a web map from your current QGIS project, either as OpenLayers, Leaflet, or Mapbox GL JS.\n\n-   It replicates as many aspects of the project as it can, including layers, styles (including categorized and graduated), and extent.\n\n-   No server-side software required.\n\nTo learn more, click on this [link](https://github.com/tomchadwin/qgis2web/wiki).\n:::\n\n::: {.column width=\"50%\"}\n![](img/image15.jpg)\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### Introducing tree.js\n\n::::: columns\n::: {.column width=\"50%\"}\n-   A cross-browser JavaScript library and application programming interface (API) used to create and display animated 3D computer graphics in a web browser using WebGL.\n\n-   To learn more and download, click on this [link](https://threejs.org/).\n:::\n\n::: {.column width=\"50%\"}\n-   3D Webmap powered by three.js?\n\n![](img/image16.jpg)\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### qgis2tree plug-in\n\n::::: columns\n::: {.column width=\"50%\"}\n-   qgis2tree generates a 3d webmap by using DEM, vector data and raster data from your current QGIS project.\n\n-   You can save the 3D model in glTF format for 3DCG or 3D printing.\n\n-   To learn more, click on this [link](https://qgis2threejs.readthedocs.io/en/docs/).\n:::\n\n::: {.column width=\"50%\"}\n![](img/image17.jpg)\n:::\n:::::\n\n## GIS and Social Consciousness\n\n::::: columns\n::: {.column width=\"50%\"}\nThe true value of GIS is: ![](img/image18a.jpg){width=\"800\"}\n:::\n\n::: {.column width=\"50%\"}\nTo create a better world. ![](img/image18b.jpg)\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### Learning from book\n\n[Environmental issues in the Mekong Delta: Drivers, consequences, and management outlooks](https://repository.nie.edu.sg/bitstream/10497/24049/1/GD-2022-1-1.pdf)\n\n![](img/image19.jpg)\n\n------------------------------------------------------------------------\n\n### The Hard Truth\n\n[The Quest for Dirt](https://storymaps.arcgis.com/stories/ffe819e79f4a4f6192c6a7e122523d70)\n\n![](img/image20.jpg)\n\n## What is Next?\n\n![](img/image21.jpg)\n\nFor more information, please visit this [link](https://www.sla.gov.sg/geoworks/programmes/geochallenges/asean-geospatial-challenge-2024).\n\n------------------------------------------------------------------------\n\n### Shameful Advertisement!\n\n![](img/image22.jpg)\n\nFor more information, please click on this [link](https://is415-ay2022-23t2.netlify.app/).\n\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}