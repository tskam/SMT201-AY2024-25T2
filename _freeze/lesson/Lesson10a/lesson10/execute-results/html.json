{
  "hash": "fa12446c7e26cfb5cd8e92b946900601",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lesson 10: Urban Network Analysis with GIS\"\nauthor: \"Dr. Kam Tin Seong<br/>Assoc. Professor of Information Systems\"\ninstitute: \"School of Computing and Information Systems,<br/>Singapore Management University\"\ndate: \"last-modified\"\ndate-modified: \"last-modified\" \nformat: \n  revealjs:\n    width: 1600\n    height: 900\n    show-notes: false\n    slide-number: true\n    show-slide-number: 'all'\neditor: visual\nexecute: \n  freeze: true\n---\n\n\n\n\n\n## Content\n\n-   Why analyse with network?\n\n-   Network model\n\n-   Real world network system\n\n-   Complexity of urban road network\n\n-   Shortest path analysis algorithm\n\n-   Network analysis methods\n\n## Location question\n\n-   How to assign the eldercare centres to the closest polyclinic?\n\n![](img/image1.jpg)\n\n------------------------------------------------------------------------\n\n### GIS answer\n\n-   Using buffer analysis\n\n![](img/image2.jpg){fig-align=\"center\"}\n\n------------------------------------------------------------------------\n\n### GIS answer\n\n-   Using desire line analysis (mmqgis plugin is needed).\n\n![](img/image3.jpg)\n\n------------------------------------------------------------------------\n\n### Limitation of the GIS answers\n\n-   Failed to consider the actual road network.\n\n![](img/image4.jpg)\n\n## A Network Model\n\n-   A **link** refers to a linear segment defined by two end points. Also called **edges**.\n\n-   A **node** refers to an end point of a link.\n\n![](img/image5.jpg)\n\n------------------------------------------------------------------------\n\n### Two types of networks\n\n::::: columns\n::: {.column width=\"50%\"}\n-   Geometric\n-   Directed flow, away from sources and toward sinks\n-   Resources make no travel decisions\n-   Topologic\n-   Undirected flow\n-   Resources make their own travel decisions\n:::\n\n::: {.column width=\"50%\"}\n![](img/image6.jpg)\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### A Transportation Network\n\nThis network theme represents city streets and highways. Several theme attributes, such as speed limits, the number of lanes a street has, or which streets are one-way or two-way, can affect the flow of goods and services through a network.\n\n![](img/image7.jpg)\n\n------------------------------------------------------------------------\n\n### An Utility Network\n\nUtilities can also be network themes. In this example, the diameter of the waterlines, the system's water pressure, and the location of control valves can affect the flow of the water through the network.\n\n![](img/image8.jpg)\n\n------------------------------------------------------------------------\n\n### A River Network\n\nRiver systems can be represented as a network or a series of networks. Some systems may not connect while other systems may connect naturally or may be connected by canals. The location of locks, river width, river depth, and current can affect the analysis.\n\n![](img/image9.jpg)\n\n------------------------------------------------------------------------\n\n### A simple transport network model\n\n![](img/image10.jpg)\n\n------------------------------------------------------------------------\n\n### Complexity of Urban Network Topology\n\nBeyond nodes and edges, there are more.....\n\n![](img/image11.jpg)\n\n------------------------------------------------------------------------\n\n### Multilane Expressway\n\n![](img/image12.jpg)\n\n------------------------------------------------------------------------\n\n### Multilane Major Road\n\n![](img/image13.jpg)\n\n------------------------------------------------------------------------\n\n### Two-way Road\n\n![](img/image14.jpg)\n\n------------------------------------------------------------------------\n\n### One-way Road\n\n![](img/image15.jpg)\n\n------------------------------------------------------------------------\n\n### Tunnel\n\n![](img/image16.jpg)\n\n------------------------------------------------------------------------\n\n### A Tale of Two Roads\n\n![](img/image17.jpg)\n\n------------------------------------------------------------------------\n\n### Road facilities slow down traffic\n\nRoad sign and traffic light inform about restrictions and rules.\n\n![](img/image18.jpg)\n\n------------------------------------------------------------------------\n\n### Road facilities slow down traffic\n\n![](img/image19.jpg)\n\n------------------------------------------------------------------------\n\n### Road conditions are dynamic\n\n![](img/image20.jpg)\n\n------------------------------------------------------------------------\n\n## Poor man network data source\n\nBulk extract at [Geofabrik](https://download.geofabrik.de/) free download server.\n\n![](img/image21.jpg)\n\n## Shortest Path Analysis\n\nShortest path analysis finds the path with the minimum cumulative impedance between nodes on a network. The path may connect just two nodes an origin and a destination or have specific stops between the nodes.\n\n![](img/image22.jpg){fig-align=\"center\"}\n\n------------------------------------------------------------------------\n\n### Dijkstra's Shortest Path Algorithm\n\n-   The path that will be calculated depends on which other nodes must be visited and in what order.\n\n![](img/image23.jpg)\n\n------------------------------------------------------------------------\n\n### Dijkstra's Shortest Path Algorithm\n\n-   A network consisting of seven nodes and 10 lines.\n\n![](img/image24.jpg)\n\n------------------------------------------------------------------------\n\n### Dijkstra's Shortest Path Algorithm\n\n-   Nodes adjacent to the origin node are in red.\n\n![](img/image25.jpg)\n\n------------------------------------------------------------------------\n\n### Dijkstra's Shortest Path Algorithm\n\n-   Because the line between nodes a and b has the lowest cost (8), node b becomes a reached node.\n\n![](img/image26.jpg)\n\n------------------------------------------------------------------------\n\n### Dijkstra's Shortest Path Algorithm\n\n-   After calculating a reached node, the algorithm continues to scan adjacent nodes.\n\n![](img/image27.jpg)\n\n------------------------------------------------------------------------\n\n### Dijkstra's Shortest Path Algorithm\n\n-   The least cost path now travels from node a to node b to node f.\n\n![](img/image28.jpg)\n\n------------------------------------------------------------------------\n\n### Dijkstra's Shortest Path Algorithm\n\n-   The cost of going from node a to node c to node e is 15, while the cost of going from node a to node d to node e is 16. The algorithm will choose the former, least cost, path.\n\n![](img/image29.jpg)\n\n------------------------------------------------------------------------\n\n### Dijkstra's Shortest Path Algorithm\n\n-   All nodes have now been reached.\n\n![](img/image31.jpg){fig-align=\"center\" width=\"450\"}\n\n------------------------------------------------------------------------\n\n### Dijkstra's Shortest Path Algorithm\n\n-   The least cost path from node a to node g.\n\n![](img/image32.jpg)\n\n## Fastest Path\n\n-   Fastest paths are based on time and you can use any measure of time you choose (seconds, minutes, hours, etc.).\n\n![](img/image33.jpg)\n\n## Travelling salesman problem\n\n-   A route can visit many stops in a network. The origin can also be the destination, as the warehouse is in this example delivery route.\n\n![](img/image34.jpg)\n\n------------------------------------------------------------------------\n\n## Beyond network model\n\nAccessibility modelling.\n\n![](img/image35.jpg)\n\nSource: https://developers.route360.net/index.html\n\n------------------------------------------------------------------------\n\n### Network Drive Time: Accessibility\n\n::::: columns\n::: {.column width=\"50%\"}\n-   If you know what is near a site, you can make better decisions about how suitable the site is for your business needs.\n:::\n\n::: {.column width=\"50%\"}\n![](img/image36.jpg)\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### Network Service Areas\n\n::::: columns\n::: {.column width=\"50%\"}\n![](img/image37a.jpg)\n:::\n\n::: {.column width=\"50%\"}\n![](img/image37b.jpg)\n:::\n:::::\n\n------------------------------------------------------------------------\n\n### Facility location -- network model\n\n-   Given a set of clients, finds the facility location that minimises that path length to travel between the facility to each of the clients.\n\n![](img/image38.jpg)\n\n------------------------------------------------------------------------\n\n### Facility location -- planar model\n\n-   Given a set of clients, finds the facility location that minimises that path length to travel between the facility to each of the clients.\n\n![](img/image39.jpg)\n\n## QGIS Network Analysis Support\n\n::::: columns\n::: {.column width=\"50%\"}\n-   Build in\n\n![](img/image40a.jpg){width=\"419\"}\n:::\n\n::: {.column width=\"50%\"}\n-   Plug-in\n\n![](img/image40b.jpg){width=\"585\"}\n\nFor more detail, visit this [link](https://root676.github.io/)\n:::\n:::::\n\n\n\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}